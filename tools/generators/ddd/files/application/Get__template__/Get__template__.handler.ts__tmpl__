import { Inject } from '@nestjs/common';
import { CommandHandler, ICommandHandler } from '@nestjs/cqrs';
import {
  <%=constant%>_REPOSITORY,
  <%=className%>Repository,
} from '../../domain/repository/<%=className%>Repository';
import { Get<%=className%>Command } from './Get<%=className%>.command';

@CommandHandler(Get<%=className%>Command)
export class Get<%=className%>Handler
  implements ICommandHandler<Get<%=className%>Command>
{
  constructor(
    @Inject(<%=constant%>_REPOSITORY) private <%=propertyName%>Repository: <%=className%>Repository
  ) {}

  async execute(command: Get<%=className%>Command) {
    return this.<%=propertyName%>Repository.find(command.id);
  }
}
